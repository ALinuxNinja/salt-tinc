global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option forwardfor
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
	mode http
	option httplog
	option forwardfor
	reqadd X-Forwarded-Proto:\ http

	bind {{ grains['external_ip4'] }}:80
	default_backend page-not-found

	# Hosts
	{% for backend,backend_settings in pillar['ddosfilter']['backend'].items() %}
	{% if grains['id'] in backend_settings['frontends'] %}
	{%- if backend_settings['http-hosts'] is defined -%}
	{%- for host in backend_settings['http-hosts'] %}
	acl host_recognized hdr(host) -i {{ host }}
	{%- endfor -%}
	{%- endif -%}
	{%- if backend_settings['https-hosts'] is defined -%}
    {%- for host in backend_settings['https-hosts'] %}
	acl host_recognized hdr(host) -i {{ host }}
	redirect scheme https code 301 if { hdr(Host) -i {{ host }} } !{ ssl_fc }
	{%- endfor -%}
	{%- endif -%}
	{%- if backend_settings['http-hosts-nocache'] is defined -%}
	{%- for host in backend_settings['http-hosts-nocache'] %}
	acl host_recognized hdr(host) -i {{ host }}          
	{%- endfor -%}
	{%- endif -%}
	{%- if backend_settings['https-hosts-nocache'] is defined -%}
	{%- for host in backend_settings['https-hosts-nocache'] %}
	acl host_recognized hdr(host) -i {{ host }}
	redirect scheme https code 301 if { hdr(Host) -i {{ host }} } !{ ssl_fc }
	{%- endfor -%}
	{%- endif -%}
    {%- endif -%}
	{%- endfor %}

	# CDN
	acl cdn_recognized hdr(X-Pull) -i 6Qo5PCPVvDL3MOf
	use_backend varnish if cdn_recognized

	# Recognized Host, set backend
	use_backend nginx if host_recognized

frontend https-in
	option httplog
	option forwardfor
	reqadd X-Forwarded-Proto:\ https

	rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains
	rspadd X-Frame-Option:\ DENY
	bind {{ grains['external_ip4'] }}:443 ssl crt /etc/ssl/startledphoenix/pem no-sslv3
	default_backend page-not-found

	# Hosts
	{% for backend,backend_settings in pillar['ddosfilter']['backend'].items() %}
	{% if grains['id'] in backend_settings['frontends'] %}
    {% if backend_settings['https-hosts-nocache'] is defined %}
    {%- for host in backend_settings['https-hosts-nocache'] %}
    acl host_recognized hdr(host) -i {{ host }}
    {%- endfor -%}
    {%- endif -%}
    {%- if backend_settings['https-hosts'] is defined -%}
    {%- for host in backend_settings['https-hosts'] %}
    acl host_recognized hdr(host) -i {{ host }}          
    {%- endfor -%}
	{%- endif -%}
    {%- endif -%}
	{%- endfor %}

	# CDN
	acl cdn_recognized hdr(X-Pull) -i 6Qo5PCPVvDL3MOf
	use_backend varnish if cdn_recognized

	# Recognized Host, set backend
	use_backend nginx if host_recognized

backend nginx
	server nginx 127.0.0.1:80

backend varnish
	server varnish 127.0.0.1:8080

backend page-not-found
	option httpclose
	reqirep ^Host: Host:\ page-not-found.error.startledphoenix.net
	server varnish 127.0.0.1:80
	reqirep ^Host: Host:\ page-not-found.error.startledphoenix.net

backend ip-req-blocked
	server varnish 127.0.0.1:80
