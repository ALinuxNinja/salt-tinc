{% import_yaml "tinc/osmap.yaml" as osmap %}
{% import_yaml "tinc/defaults.yaml" as defaults %}


{# Map OS to OSName #}
{% set os_distro = salt['grains.filter_by'](osmap,grain='os',default='Debian') %}

{# Map Operating System version #}
{% if grains['osmajorrelease'] is defined %}
{% set os_settings = salt['grains.filter_by'](os_distro,grain='osmajorrelease',base='common') %}
{% else %}
{% set os_settings = salt['grains.filter_by'](os_distro,grain='oscodename',base='common') %}
{% endif %}

{# Merge in defaults to OS settings #}
{% do defaults.tinc.update(os_settings) %}

{# Merge in pillar #}
{% if pillar['tinc'] is defined %}
{% set tinc_pillar = salt['pillar.get']('tinc',default=defaults.tinc,merge=True) %}
{% else %}
{% set tinc_pillar = salt['pillar.get']('',default=defaults.tinc,merge=True) %}

{# Merge settings for services #}
{% if pillar['tinc']['service'] is defined %}
{% for service, service_settings in pillar['tinc']['service'].iteritems() %}
{% set service_common = salt['pillar.get']('tinc:service:'~service~':common',default={},merge=True) %}
{% set service_minion = salt['pillar.get']('tinc:service:'~service~':'~grains['id'],default=service_common,merge=True) %}
{% do tinc_pillar.service.pop(service) %}
{% do tinc_pillar.service.update(service, service_minion)}
{% endfor %}
{% endif %}

{% endif %}

{# Remove stuff that is not needed #}
{% for network, network_setting in pillar['tinc']['network'].iteritems() %}
{% if network_setting['node'][grains['id']] is not defined and network_setting['master'][grains['id']] is not defined %}
{% do tinc_pillar.network.pop(network) %}
{% endif %}
{% endfor %}

{# Create import pillar #}
{% set tinc = tinc_pillar %}
