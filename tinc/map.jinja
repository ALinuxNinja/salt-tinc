{% import_yaml "tinc/osmap.yaml" as osmap %}
{% import_yaml "tinc/defaults.yaml" as defaults %}


{# Map OS to OSName #}
{% set os_distro = salt['grains.filter_by'](osmap,grain='os',default='Debian') %}

{# Map Operating System version #}
{% if grains['osmajorrelease'] is defined %}
{% set os_settings = salt['grains.filter_by'](os_distro,grain='osmajorrelease',base='common') %}
{% else %}
{% set os_settings = salt['grains.filter_by'](os_distro,grain='oscodename',base='common') %}
{% endif %}

{# Merge in defaults to OS settings #}
{% do defaults.tinc.update(os_settings) %}

{# Merge in pillar #}
{% if pillar['tinc'] is defined %}
{% set tinc_pillar = salt['pillar.get']('tinc',default=defaults.tinc,merge=True) %}
{% else %}
{% set tinc_pillar = salt['pillar.get']('',default=defaults.tinc,merge=True) %}
{% endif %}

{# Remove stuff that is not needed #}
{% for network, network_setting in pillar['tinc']['network'].iteritems() %}
{% if network_setting['node'][grains['id']] is not defined and network_setting['master'][grains['id']] is not defined %}
{% do tinc_pillar.network.pop(network) %}
{% endif %}
{% endfor %}

{# Merge Services #}
{% set clean_pillar = tinc_pillar %}
{% if clean_pillar['service']['ospf']['common'] is defined %}
{% set service_data = salt['pillar.get']('tinc:service:ospf:common',default={},merge=True) %}
{% if pillar['tinc']['service']['ospf'][grains['id']] is defined %}
{% set service_data = salt['pillar.get']('tinc:service:ospf:'~grains['id'],default=service_data,merge=True) %}
{% endif %}
{% do clean_pillar.update.update(map(service:ospf,service_data)) %}
{% else %}
{% do clean_pillar.service.ospf.clear() %}
{% endif %}

{# Create import pillar #}
{% set tinc = clean_pillar %}
